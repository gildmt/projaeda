<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="class_cliente" kind="class" language="C++" prot="public">
    <compoundname>Cliente</compoundname>
    <includes refid="_cliente_8h" local="no">Cliente.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cliente_1a7ebd7f8e396e9fd8b9c1f5fc20a16fed" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string Cliente::nome</definition>
        <argsstring></argsstring>
        <name>nome</name>
        <briefdescription>
<para>The nome. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="32" column="1" bodyfile="Cliente.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cliente_1abb000fc03fa9343f9b59e5a27a30404a" prot="private" static="no" mutable="no">
        <type>long</type>
        <definition>long Cliente::nif</definition>
        <argsstring></argsstring>
        <name>nif</name>
        <briefdescription>
<para>The nif. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="34" column="1" bodyfile="Cliente.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cliente_1a14240898329d14688bb7e2e2709db710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Cliente::Cliente</definition>
        <argsstring>(string nome, long NIF)</argsstring>
        <name>Cliente</name>
        <param>
          <type>string</type>
          <declname>nome</declname>
        </param>
        <param>
          <type>long</type>
          <declname>NIF</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nome</parametername>
</parameternamelist>
<parameterdescription>
<para>The nome. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>NIF</parametername>
</parameternamelist>
<parameterdescription>
<para>The nif. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="47" column="1" bodyfile="Cliente.cpp" bodystart="9" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1ab6a372f412692c12c4be4427b00a3f6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Cliente::Cliente</definition>
        <argsstring>()</argsstring>
        <name>Cliente</name>
        <briefdescription>
<para>Default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="55" column="1" bodyfile="Cliente.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1a6ea9b20d8340c4f6df9bb6a79e828ccc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Cliente::Cliente</definition>
        <argsstring>(ifstream &amp;in)</argsstring>
        <name>Cliente</name>
        <param>
          <type>ifstream &amp;</type>
          <declname>in</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">in</parametername>
</parameternamelist>
<parameterdescription>
<para>The in. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="65" column="1" bodyfile="Cliente.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1ac9662059b96002d423e33cb6827b37f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string Cliente::getNome</definition>
        <argsstring>()</argsstring>
        <name>getNome</name>
        <briefdescription>
<para>Gets the nome. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The nome. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="75" column="1" bodyfile="Cliente.cpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1a243d3f408b70d3ab6466dfa32b9f40a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Cliente::getNif</definition>
        <argsstring>()</argsstring>
        <name>getNif</name>
        <briefdescription>
<para>Gets the nif. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The nif. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="85" column="1" bodyfile="Cliente.cpp" bodystart="33" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1a383af20fa7ace06d4f04fe26e82e0ca2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cliente::setNome</definition>
        <argsstring>(string nome)</argsstring>
        <name>setNome</name>
        <param>
          <type>string</type>
          <declname>nome</declname>
        </param>
        <briefdescription>
<para>Sets a nome. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nome</parametername>
</parameternamelist>
<parameterdescription>
<para>The nome. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="95" column="1" bodyfile="Cliente.cpp" bodystart="37" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1a8d729975d853d8f4a0123906655b5e73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cliente::setNif</definition>
        <argsstring>(long NIF)</argsstring>
        <name>setNif</name>
        <param>
          <type>long</type>
          <declname>NIF</declname>
        </param>
        <briefdescription>
<para>Sets a nif. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>NIF</parametername>
</parameternamelist>
<parameterdescription>
<para>The nif. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="105" column="1" bodyfile="Cliente.cpp" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1a093309873c9b1514786650e03a50247e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Cliente::operator&lt;</definition>
        <argsstring>(const Cliente &amp;cl) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_cliente" kindref="compound">Cliente</ref> &amp;</type>
          <declname>cl</declname>
        </param>
        <briefdescription>
<para>Less-than comparison operator. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>cl</parametername>
</parameternamelist>
<parameterdescription>
<para>The cl.</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the first parameter is less than the second. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="117" column="1" bodyfile="Cliente.cpp" bodystart="45" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_cliente_1ad1f4557a02cedb762de957cb18e97dd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Cliente::guardar</definition>
        <argsstring>(ofstream &amp;out) const</argsstring>
        <name>guardar</name>
        <param>
          <type>ofstream &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
<para>Guardars the given out. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="inout">out</parametername>
</parameternamelist>
<parameterdescription>
<para>The out. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Cliente.h" line="127" column="1" bodyfile="Cliente.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>IMP: pode haver 2 cli com o mesmo nome, mas nao com o mesmo NIF. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="Cliente.h" line="29" column="1" bodyfile="Cliente.h" bodystart="29" bodyend="128"/>
    <listofallmembers>
      <member refid="class_cliente_1a14240898329d14688bb7e2e2709db710" prot="public" virt="non-virtual"><scope>Cliente</scope><name>Cliente</name></member>
      <member refid="class_cliente_1ab6a372f412692c12c4be4427b00a3f6e" prot="public" virt="non-virtual"><scope>Cliente</scope><name>Cliente</name></member>
      <member refid="class_cliente_1a6ea9b20d8340c4f6df9bb6a79e828ccc" prot="public" virt="non-virtual"><scope>Cliente</scope><name>Cliente</name></member>
      <member refid="class_cliente_1a243d3f408b70d3ab6466dfa32b9f40a6" prot="public" virt="non-virtual"><scope>Cliente</scope><name>getNif</name></member>
      <member refid="class_cliente_1ac9662059b96002d423e33cb6827b37f1" prot="public" virt="non-virtual"><scope>Cliente</scope><name>getNome</name></member>
      <member refid="class_cliente_1ad1f4557a02cedb762de957cb18e97dd5" prot="public" virt="non-virtual"><scope>Cliente</scope><name>guardar</name></member>
      <member refid="class_cliente_1abb000fc03fa9343f9b59e5a27a30404a" prot="private" virt="non-virtual"><scope>Cliente</scope><name>nif</name></member>
      <member refid="class_cliente_1a7ebd7f8e396e9fd8b9c1f5fc20a16fed" prot="private" virt="non-virtual"><scope>Cliente</scope><name>nome</name></member>
      <member refid="class_cliente_1a093309873c9b1514786650e03a50247e" prot="public" virt="non-virtual"><scope>Cliente</scope><name>operator&lt;</name></member>
      <member refid="class_cliente_1a8d729975d853d8f4a0123906655b5e73" prot="public" virt="non-virtual"><scope>Cliente</scope><name>setNif</name></member>
      <member refid="class_cliente_1a383af20fa7ace06d4f04fe26e82e0ca2" prot="public" virt="non-virtual"><scope>Cliente</scope><name>setNome</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
